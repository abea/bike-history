{"version":3,"sources":["webpack:///./src/views/About.vue?0492","webpack:///./src/views/About.vue"],"names":["render","_vm","this","_h","$createElement","_self","_c","_m","staticRenderFns","_v","attrs","cite","script","component","Object","componentNormalizer","__webpack_exports__"],"mappings":"8GAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BH,EAAAI,MAAAC,GAAwB,OAAAL,EAAAM,GAAA,IACzFC,EAAA,YAAoC,IAAAP,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BE,EAAAL,EAAAI,MAAAC,IAAAH,EAAwB,OAAAG,EAAA,OAAAA,EAAA,MAAAL,EAAAQ,GAAA,WAAAH,EAAA,KAAAL,EAAAQ,GAAA,0JAAAH,EAAA,MAAAL,EAAAQ,GAAA,mBAAAH,EAAA,cAAyQI,MAAA,CAAOC,KAAA,iDAAuD,CAAAV,EAAAQ,GAAA,6JAAAH,EAAA,UAAAL,EAAAQ,GAAA,iMAAAR,EAAAQ,GAAA,wEAAAH,EAAA,KAAAL,EAAAQ,GAAA,4HAAAH,EAAA,MAAAL,EAAAQ,GAAA,aAAAH,EAAA,KAAAL,EAAAQ,GAAA,6LAAAH,EAAA,KAAAL,EAAAQ,GAAA,uFAAAH,EAAA,MAAAA,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,mDAAAR,EAAAQ,GAAA,iFAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,iDAAAR,EAAAQ,GAAA,iGAAAH,EAAA,MAAAA,EAAA,UAAAL,EAAAQ,GAAA,qDAAAR,EAAAQ,GAAA,oMAAAH,EAAA,KAAAL,EAAAQ,GAAA,wDAAAH,EAAA,QAAAL,EAAAQ,GAAA,yBAAAR,EAAAQ,GAAA,2BCA1aG,EAAA,GAKAC,EAAgBC,OAAAC,EAAA,KAAAD,CAChBF,EACEZ,EACAQ,GACF,EACA,KACA,KACA,MAIeQ,EAAA,WAAAH","file":"js/about.2fad7f2a.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h1',[_vm._v(\"About\")]),_c('p',[_vm._v(\"\\n    This app was created based on an interview challenge. Code at https://github.com/abea/bike-history. Data is available starting 2018-09-16.\\n  \")]),_c('h2',[_vm._v(\"The Challenge\")]),_c('blockquote',{attrs:{\"cite\":\"https://github.com/punkave/backend-challenge\"}},[_vm._v(\"\\n    Using MongoDB, Node.js, Express, and the Linux, Node.js and MongoDB hosting of your choice (see below for hosting details including free options), \"),_c('strong',[_vm._v(\"create a new API server which accumulates data over time and provides access to historical data for both weather and Indego bike availability, supporting the following queries at minimum.\")]),_vm._v(\" Note that it is sufficient to store data at hourly intervals.\\n  \")]),_c('p',[_vm._v(\"\\n    See requirements and more information at https://github.com/punkave/backend-challenge/blob/master/README.md.\\n  \")]),_c('h2',[_vm._v(\"The App\")]),_c('p',[_vm._v(\"\\n    The finish app is currently hosted at https://indego-history.herokuapp.com. There's a limited front-end created using Vue.js demonstrating a few elements of the overall API.\\n  \")]),_c('p',[_vm._v(\"\\n    There are three formats in which to request data directly from the API:\\n  \")]),_c('ul',[_c('li',[_c('strong',[_vm._v(\"Snapshot of all stations at a specified time:\")]),_vm._v(\" https://indego-history.herokuapp.com/api/v1/stations?at=DATETIMEHERE\\n    \")]),_c('li',[_c('strong',[_vm._v(\"Snapshot of one station at a specific time:\")]),_vm._v(\" https://indego-history.herokuapp.com/api/v1/stations/KIOSKIDGOESHERE?at=DATETIMEHERE\\n    \")]),_c('li',[_c('strong',[_vm._v(\"Snapshots of one station over a range of times:\")]),_vm._v(\" https://indego-history.herokuapp.com/api/v1/stations/KIOSKIDGOESHERE?from=DATETIMEHERE&to=DATETIMEHERE&frequency=[daily/hourly] (if frequency is not included, it defaults to hourly)\\n    \")])]),_c('p',[_vm._v(\"\\n    Dates should be written in string format like \"),_c('code',[_vm._v(\"2017-11-01T11:00:00\")]),_vm._v(\".\\n  \")])])}]\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=fa4c33a2&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}